
services:
  database:
    image: mongo
    container_name: database
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/mongodb_username
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongodb_password
    networks:
      - MERN-APP
    volumes:
      - mongo_data:/data/db
    secrets:
      - mongodb_username
      - mongodb_password

  backend:
    build:
      context: backend/
      dockerfile: Dockerfile
    container_name: backend
    image: rafaynadeem1203/mern-backend:1.0
    env_file:
      - backend/.env
    ports:
      - "4000:4000"
    networks:
      - MERN-APP
    command: [ "npm","start"]
    healthcheck:
      test: ["CMD", "nc", "-z", "backend","4000"]
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile.production
    container_name: frontend
    image: rafaynadeem1203/mern-frontend:1.0
    ports:
      - "3000:80"
    depends_on:
      - database
      - backend
    networks:
      - MERN-APP
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["nginx", "-g", "daemon off;"]

  seed:
    image: rafaynadeem1203/mern-seeder:1.0
    container_name: seeder
    entrypoint: >
      /bin/sh -c "until curl -X GET http://backend:4000/api/seed; do echo 'Waiting for backend...'; sleep 5; done"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - MERN-APP

volumes:
  mongo_data:

networks:
  MERN-APP:
    driver: bridge

secrets:
  mongodb_username:
    file: ./secrets/mongodb_username.txt
  mongodb_password:
    file: ./secrets/mongodb_password.txt